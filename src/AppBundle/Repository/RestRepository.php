<?php

namespace AppBundle\Repository;

/**
 * RestRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

use Doctrine\Common\Collections\Criteria;
use Doctrine\ORM\EntityRepository;

class RestRepository extends EntityRepository
{
    public function findByFilter($ldf, $hangar)
    {
        //var_dump($ldf);
        //var_dump($hangar);
        $em = $this->getEntityManager();

        $qb = $em->createQueryBuilder();

        $qb->select('r')
            ->from('AppBundle:Rest', 'r');
        // var_dump($qb);
        $criteria = Criteria::create();

        if ($ldf == 'all') {
            $criteria->where(Criteria::expr()->gt('r.ldf', '0'));
        } else {
            $criteria->where(Criteria::expr()->eq('r.ldf', $ldf));
        }
        if ($hangar == 'all') {
            $criteria->andWhere(Criteria::expr()->gt('r.hangar', '0'));
        } else {
            $criteria->andWhere(Criteria::expr()->eq('r.hangar', $hangar));
        }

        $qb->addCriteria($criteria);

        $rest = $qb->getQuery()->getResult();

        return $rest;

    }

    public function findLdfByProject($project)
    {

        $em = $this->getEntityManager();

        $qb = $em->createQueryBuilder();

        $qb->select('ldf.name, ldf.id ')
            ->from('AppBundle:Rest', 'r')
            ->leftJoin('r.ldf', 'ldf')
            ->where('r.project = :project')
            ->andWhere('r.status = 3')
            ->setParameter('project',$project)
            ->distinct();

        $rest = $qb->getQuery()->getResult();

        return $rest;

    }
}
